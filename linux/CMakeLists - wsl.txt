cmake_minimum_required(VERSION 3.2)
SET(CMAKE_INSTALL_PREFIX ./lib)

project(PhantomDogs)

find_package(SDL2 REQUIRED)

find_path(AVCODEC_INCLUDE_DIR libavcodec/avcodec.h)
find_library(AVCODEC_LIBRARY avcodec)

find_path(AVFORMAT_INCLUDE_DIR libavformat/avformat.h)
find_library(AVFORMAT_LIBRARY avformat)

find_path(AVUTIL_INCLUDE_DIR libavutil/avutil.h)
find_library(AVUTIL_LIBRARY avutil)

find_path(AVRESAMPLE_INCLUDE_DIR libswresample/swresample.h)
find_library(AVRESAMPLE_LIBRARY swresample)

find_path(AVSCALE_INCLUDE_DIR libswscale/swscale.h)
find_library(AVSCALE_LIBRARY swscale)


set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=gnu11")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -I/usr/include/SDL2/ -std=c++14")
#might allow to remove additions from loguru *_additions
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++14")

set(IMGUI_DIR ../SapphireEngine/ext/mac/imgui)


include_directories(
  ${AVCODEC_INCLUDE_DIR} ${AVFORMAT_INCLUDE_DIR} ${AVUTIL_INCLUDE_DIR} ${AVRESAMPLE_INCLUDE_DIR} ${AVSCALE_INCLUDE_DIR}
  "../src/"
  "../src/player-cpp-ffmpeg-sdl"
  "../SapphireEngine/ext/loguru-master"
  ${IMGUI_DIR}
  ${IMGUI_DIR}/backends
  ${IMGUI_DIR}/misc/cpp/
  "../SapphireEngine/include"
)

file(GLOB_RECURSE game_SRC CONFIGURE_DEPENDS "../src/*.h" "../src/*.cpp")

set(IMGUI_SRC
      ${IMGUI_DIR}/imgui.h
      ${IMGUI_DIR}/imgui.cpp
      ${IMGUI_DIR}/imgui_draw.cpp
      ${IMGUI_DIR}/imgui_tables.cpp
      ${IMGUI_DIR}/imgui_widgets.cpp
      ${IMGUI_DIR}/imgui_demo.cpp
      ${IMGUI_DIR}/backends/imgui_impl_sdl2.cpp
      ${IMGUI_DIR}/backends/imgui_impl_sdlrenderer2.cpp
      ${IMGUI_DIR}/misc/cpp/imgui_stdlib.cpp
)

add_executable(${PROJECT_NAME}
  ${game_SRC}
  ${IMGUI_SRC}
)

link_directories("../SapphireEngine/linux/build")
target_link_directories(${PROJECT_NAME} PRIVATE "../SapphireEngine/linux/build")

target_link_libraries(${PROJECT_NAME}
  SapphireEngine
  SDL2_mixer 
  SDL2_image 
  SDL2_ttf 
  SDL2_gfx 
  SDL2 
  ${AVCODEC_LIBRARY} 
  ${AVFORMAT_LIBRARY} 
  ${AVUTIL_LIBRARY} 
  ${AVRESAMPLE_LIBRARY}
  ${AVSCALE_LIBRARY}

  ${SDL2_LIBRARIES}
  pthread
  gcc
  z
  m
)
